{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","keyword","handleKeywordChange","value","onChange","PersonForm","props","newName","handleNameChange","newNumber","handleNumberChange","addPerson","onSubmit","type","Persons","persons","deletePerson","map","person","key","name","number","onClick","Notification","notification","message","className","apiUrl","axios","get","then","response","data","newPerson","post","updatedPerson","put","id","delete","App","useState","setPersons","setNewName","setNewNumber","setKeyword","setNotification","handleNotification","console","log","setTimeout","filteredPersons","filter","x","toLowerCase","indexOf","useEffect","personService","allPersons","event","target","preventDefault","existingPerson","find","toLocaleLowerCase","window","confirm","personToUpdate","catch","error","createdPerson","concat","personToDelete","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9dccc59.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({keyword, handleKeywordChange}) => {\r\n    return (\r\n        <div>\r\n            filter shown with <input value={keyword} onChange={handleKeywordChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n    const {newName, handleNameChange, newNumber, handleNumberChange, addPerson} = props\r\n    \r\n    return (\r\n        <div>\r\n            <form onSubmit={addPerson}>\r\n                <div>\r\n                name: <input value={newName} onChange={handleNameChange} />\r\n                </div>\r\n                <div>\r\n                number: <input value={newNumber} onChange={handleNumberChange} />\r\n                </div>\r\n                <div>\r\n                <button type=\"submit\">add</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Persons = ({persons, deletePerson}) => {\r\n    return (\r\n        <div>\r\n            {persons.map(person => \r\n                <div key={person.name}>\r\n                    {person.name} {person.number} <button onClick={() => deletePerson(person)}>delete</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Notification = ({ notification }) => {\r\n    if (!notification || !notification.message) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className={`message message-${notification.type}`}>\r\n        {notification.message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification","import axios from 'axios'\r\nconst apiUrl = 'https://polar-spire-33098.herokuapp.com/api/persons' //'http://localhost:3001/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios\r\n      .get(apiUrl)\r\n      .then(response => response.data)\r\n}\r\n\r\nconst createOne = newPerson => {\r\n    return axios\r\n        .post(apiUrl, newPerson)\r\n        .then(response => response.data)\r\n}\r\n\r\nconst updateOne = updatedPerson => {\r\n    return axios\r\n        .put(`${apiUrl}/${updatedPerson.id}`, updatedPerson)\r\n        .then(response => response.data)\r\n}\r\n\r\nconst deleteOne = (id) => {\r\n    return axios\r\n    .delete(`${apiUrl}/${id}`)\r\n}\r\n\r\nexport default { getAll, createOne, updateOne, deleteOne }","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ keyword, setKeyword ] = useState('')\n  const [ notification, setNotification ] = useState({message: '', type: ''})\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const existingPerson = persons.find(x => x.name.toLowerCase() === newName.toLocaleLowerCase())\n    if (existingPerson) {\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const personToUpdate = {\n          ...existingPerson,\n          number: newNumber\n        }\n        personService\n          .updateOne(personToUpdate)\n          .then(updatedPerson => {\n            setPersons(persons.map(x => x.id === updatedPerson.id ? updatedPerson : x))\n            setNewName('')\n            setNewNumber('')\n            const notification = {\n              message: `Updated '${personToUpdate.name}'`,\n              type: 'success'\n            }\n            handleNotification(notification)\n          })\n          .catch(error => {\n            const notification = {\n              message: `Person '${personToUpdate.name}' has already been removed from server`,\n              type: 'error'\n            }\n            handleNotification(notification)\n          })\n      }\n    } else {\n      const newPerson = {\n        name: newName,\n        number: newNumber\n      }\n      personService\n        .createOne(newPerson)\n        .then(createdPerson => {\n          setPersons(persons.concat(createdPerson))\n          setNewName('')\n          setNewNumber('')\n          const notification = {\n            message: `Added '${newPerson.name}'`,\n            type: 'success'\n          }\n          handleNotification(notification)\n        })\n        .catch(error => {\n          const notification = {\n            message: `Person '${newPerson.name}' cannot be created`,\n            type: 'error'\n          }\n          handleNotification(notification)\n        })\n    }\n  }\n\n  const deletePerson = (personToDelete) => {\n    if(window.confirm(`Delete ${personToDelete.id}?`)) {\n      personService\n        .deleteOne(personToDelete.id)\n        .then(() => {\n          setPersons(persons.filter(x => x.id !== personToDelete.id))\n          const notification = {\n            message: `Deleted '${personToDelete.name}'`,\n            type: 'success'\n          }\n          handleNotification(notification)\n        }) \n        .catch(error => {\n          const notification = {\n            message: `Person '${personToDelete.name}' has already been removed from server`,\n            type: 'error'\n          }\n          handleNotification(notification)\n        })\n    }    \n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleKeywordChange = (event) => {\n    setKeyword(event.target.value)\n  }\n\n  const handleNotification = (notification) => {\n    console.log(notification.message)\n    setNotification(notification)\n    setTimeout(() => {\n      setNotification({message: '', type: ''})\n    }, 5000)\n  }\n\n  const filteredPersons = keyword ? persons.filter(x => x.name.toLowerCase().indexOf(keyword.toLowerCase()) > -1) : persons\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(allPersons => {\n        setPersons(allPersons)\n      })\n  }, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} />\n      <Filter \n        keyword={keyword}\n        handleKeywordChange={handleKeywordChange} \n      />\n      <h2>add a new</h2>\n      <PersonForm \n        newName={newName} \n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n        addPerson={addPerson} \n      />\n      <h2>Numbers</h2>\n      <Persons persons={filteredPersons} deletePerson={deletePerson} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}